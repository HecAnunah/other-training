#Подробнее в уроке 42 от hexlet


Создаем пакет
С точки зрения структуры пакет — это каталог (директория) с файлами модулей, имеющий имя в формате snake_case
и содержащий специальный модуль с именем «__init__.py». Именно наличие этого специального файла подсказывает интерпретатору Python,
что каталог следует воспринимать как пакет.

Рассмотрим пример самого простого пакета. Создадим пакет из каталога package и модуля __init__.py внутри этого каталога:

package/
└── __init__.py

В файл __init__.py добавим следующий код:

# file __init__.py
NAME = 'super_package'

Теперь у нас есть небольшой, но уже полноценный пакет. Его можно импортировать так же, как модуль:

import package
print(package.NAME)

Обратите внимание, что отдельно импортировать файл __init__.py не нужно.
При первом обращении к пакету Python самостоятельно импортирует модуль __init__.py.
Это происходит автоматически, потому что каталог без init-файла не будет считаться пакетом.

Добавляем модули в пакет
С простым пакетом все ясно — его можно использовать как модуль.
Теперь перейдем к группировке. Добавим в пакет еще два модуля:

package/
├── constants.py
├── functions.py
└── __init__.py

Чтобы было понятнее, рассмотрим содержимое модуля constants.py:

# file constants.py
PERSON = 'Alice'

И содержимое модуля functions.py:

# file functions.py
def greet(who):
    print('Hello, ' + who + '!')

Теперь в пакете есть не только __init__.py, но и еще два модуля — теперь их можно импортировать.

Как импортировать пакеты
В уроке про модули упоминались два распространенных варианта:

Квалифицированный импорт (также его называют «импорт модуля целиком»)
Импорт отдельных определений
Применим оба способа импорта — но теперь уже не к модулям, а к пакетам.

Квалифицированный импорт помогает писать понятный код.
Прочитав строчку вызова функции, другой разработчик сразу поймет, откуда пришли сама функция и ее аргумент.
В этом примере квалифицированный импорт выглядит так:

import package.functions
import package.constants

package.functions.greet(package.constants.PERSON)  # => Hello, Alice!
Импорт отдельных определений удобнее в работе, потому что вам не придется каждый раз прописывать имя пакета и модуля.
С другой стороны, другим разработчикам будет сложнее читать код. Чтобы узнать, откуда пришли функция и константа, им придется смотреть в блок импортов.


Попробуем импортировать отдельные определения, то есть саму функцию и аргумент:

from package.functions import greet
from package.constants import PERSON

greet(PERSON)  # => Hello, Alice!

Кроме того, импорты в Python бывают двух видов:

Абсолютные
Относительные
В предыдущих уроках мы рассматривали импорт модулей без этого разделения.
