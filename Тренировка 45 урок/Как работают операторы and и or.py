#END Никогда не выбирает True (True and "yeas" -> Yes)
# OR никогда не выбирает False(False and 'No' -> No)
# End возвращает ПОСЛЕДНЕЕ truthy выражение
#OR возвращает ПЕРВОЕ truthy выражение

#Оператор OR оценивает каждый свой операнд как truthy или falsy объект,
#возвращает — первый truthy объект
#либо последний объект, если truthy объекты в логическом выражении не найдены.

#Оператор AND возвращает первый falsy объект либо последний объект,
#если falsy объекты в логическом выражении не найдены.



print(not 1 == 2 or 3 == 3 and 5 == 6)

Согласно приоритету операторов в первую очередь вычисляются выражения 1 == 2, 3 == 3 и 5 == 6,
в результате чего исходное выражение принимает вид not False or True and False.
Далее выполняется оператор not, возвращая значение True, после него — оператор and, возвращая значение False.
Выражение принимает вид True or False.
Последним выполняется оператор or, возвращая общий результат выражения — значение True.



print('First example:')
# сравниваем остаток от деления с нулем, получаем True
# True and 'yes' дает True и оператор and возвращает последнее truthy значение -- # 'yes'
# 'yes' or 'no' дает True и оператор or возвращает первое truthy значение --
# 'yes'
number = 10
result = number % 2 == 0 and 'yes' or 'no'
print(result)

# сравниваем остаток от деления с нулем, получаем False
# False and 'yes' возвращает первое falsy значение -- False
# False or 'no' возвращает первое truthy значение -- 'no'
number = 11
result = number % 2 == 0 and 'yes' or 'no'
print(result)

print('\nSecond example:')
# операторы or и and можно использовать в цепочках
# для сравнения нескольких результатов
# цепочка из and проверяет все значения на falsy до последнего
# и вычислит 4 в конце
# 4 or 5 -> результат 4
print(1 and 2 and 3 and 4 or 5)

# а вот or сразу же вернет первый True и все вычисление завершится
print(1 or 2 or 3 or 4 and 5)

# проверяем себя -- двигаемся слева направо, держим в уме,
# что and возвращает первое встретившееся ему falsy значение
# а or возвращает первое встретившееся ему truthy значение
# итак, 0 and False - первое встретившееся falsy это 0
# дальше цепочка из or, помним, она вернет первый truthy в ней -- 42
# в итоге все выражение свернется до 0 or 42, где ответ 42
print(0 and False or '' or [] or 42)

# здесь 0 or False вернет последнее значение False
# а цепочка из and первое falsy -- ''
# в итоге свернем выражение до False and '' -> False
print(0 or False and '' and [] and 42)
